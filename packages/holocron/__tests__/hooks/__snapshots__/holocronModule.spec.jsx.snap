// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createHolocronModule browser registers module 1`] = `
Object {
  "instance": null,
  "nodeType": "component",
  "props": Object {
    "children": <Memo(HolocronModule(TestModule)) />,
    "store": Object {
      "dispatch": [Function],
      "getState": [Function],
      "rebuildReducer": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    },
  },
  "rendered": Object {
    "instance": null,
    "nodeType": "component",
    "props": Object {
      "load": undefined,
      "loadModuleData": undefined,
    },
    "rendered": Object {
      "instance": null,
      "nodeType": "component",
      "props": Object {
        "dispatch": [Function],
        "holocronLoadedStatus": false,
        "load": undefined,
        "loadModuleData": undefined,
        "moduleLoadStatus": "initial",
        "moduleState": null,
      },
      "rendered": Object {
        "instance": null,
        "nodeType": "host",
        "props": Object {
          "children": "Hello!",
        },
        "rendered": Array [
          "Hello!",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  "type": [Function],
}
`;

exports[`createHolocronModule browser registers module 2`] = `
<p>
  Hello!
</p>
`;

exports[`createHolocronModule creates holocron module and renders 1`] = `
Object {
  "instance": null,
  "nodeType": "component",
  "props": Object {
    "children": <Memo(HolocronModule(my-module)) />,
    "store": Object {
      "dispatch": [Function],
      "getState": [Function],
      "modules": Immutable.Map {},
      "rebuildReducer": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    },
  },
  "rendered": Object {
    "instance": null,
    "nodeType": "component",
    "props": Object {
      "load": undefined,
      "loadModuleData": undefined,
    },
    "rendered": Object {
      "instance": null,
      "nodeType": "component",
      "props": Object {
        "dispatch": [Function],
        "holocronLoadedStatus": false,
        "load": undefined,
        "loadModuleData": undefined,
        "moduleLoadStatus": "initial",
        "moduleState": null,
      },
      "rendered": Object {
        "instance": null,
        "nodeType": "host",
        "props": Object {
          "children": "Hello!",
        },
        "rendered": Array [
          "Hello!",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  "type": [Function],
}
`;

exports[`createHolocronModule creates holocron module and renders 2`] = `
<p>
  Hello!
</p>
`;

exports[`createHolocronModule defaults creates holocron module and renders 1`] = `
Object {
  "instance": null,
  "nodeType": "component",
  "props": Object {
    "children": <Memo(HolocronModule()) />,
    "store": Object {
      "dispatch": [Function],
      "getState": [Function],
      "modules": Immutable.Map {},
      "rebuildReducer": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    },
  },
  "rendered": Object {
    "instance": null,
    "nodeType": "component",
    "props": Object {
      "load": undefined,
      "loadModuleData": undefined,
    },
    "rendered": Object {
      "instance": null,
      "nodeType": "component",
      "props": Object {
        "dispatch": [Function],
        "holocronLoadedStatus": false,
        "load": undefined,
        "loadModuleData": undefined,
        "moduleLoadStatus": "initial",
        "moduleState": null,
      },
      "rendered": Object {
        "instance": null,
        "nodeType": "host",
        "props": Object {
          "children": "Hello!",
        },
        "rendered": Array [
          "Hello!",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  "type": [Function],
}
`;

exports[`createHolocronModule defaults creates holocron module and renders 2`] = `
<p>
  Hello!
</p>
`;

exports[`createHolocronModule defaults registers module 1`] = `
Object {
  "instance": null,
  "nodeType": "component",
  "props": Object {
    "children": <Memo(HolocronModule(TestModule)) />,
    "store": Object {
      "dispatch": [Function],
      "getState": [Function],
      "modules": Immutable.Map {
        "my-module": Object {
          "$$typeof": Symbol(react.memo),
          "@@holocron-module-reducer": [Function],
          "compare": null,
          "type": [Function],
        },
      },
      "rebuildReducer": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    },
  },
  "rendered": Object {
    "instance": null,
    "nodeType": "component",
    "props": Object {
      "load": undefined,
      "loadModuleData": undefined,
    },
    "rendered": Object {
      "instance": null,
      "nodeType": "component",
      "props": Object {
        "dispatch": [Function],
        "holocronLoadedStatus": false,
        "load": undefined,
        "loadModuleData": undefined,
        "moduleLoadStatus": "loaded",
        "moduleState": null,
      },
      "rendered": Object {
        "instance": null,
        "nodeType": "host",
        "props": Object {
          "children": "Hello!",
        },
        "rendered": Array [
          "Hello!",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  "type": [Function],
}
`;

exports[`createHolocronModule defaults registers module 2`] = `
<p>
  Hello!
</p>
`;

exports[`createHolocronModule registers module 1`] = `
Object {
  "instance": null,
  "nodeType": "component",
  "props": Object {
    "children": <Memo(HolocronModule(TestModule)) />,
    "store": Object {
      "dispatch": [Function],
      "getState": [Function],
      "modules": Immutable.Map {
        "my-module": Object {
          "$$typeof": Symbol(react.memo),
          "@@holocron-module-reducer": [Function],
          "compare": null,
          "type": [Function],
        },
      },
      "rebuildReducer": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    },
  },
  "rendered": Object {
    "instance": null,
    "nodeType": "component",
    "props": Object {
      "load": undefined,
      "loadModuleData": undefined,
    },
    "rendered": Object {
      "instance": null,
      "nodeType": "component",
      "props": Object {
        "dispatch": [Function],
        "holocronLoadedStatus": false,
        "load": undefined,
        "loadModuleData": undefined,
        "moduleLoadStatus": "loaded",
        "moduleState": null,
      },
      "rendered": Object {
        "instance": null,
        "nodeType": "host",
        "props": Object {
          "children": "Hello!",
        },
        "rendered": Array [
          "Hello!",
        ],
        "type": "p",
      },
      "type": [Function],
    },
    "type": [Function],
  },
  "type": [Function],
}
`;

exports[`createHolocronModule registers module 2`] = `
<p>
  Hello!
</p>
`;
